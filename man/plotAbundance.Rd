% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotAbundance.R
\name{plotAbundance}
\alias{plotAbundance}
\alias{plotAbundance,SummarizedExperiment-method}
\title{Plotting abundance data}
\usage{
plotAbundance(x, ...)

\S4method{plotAbundance}{SummarizedExperiment}(
  x,
  rank = taxonomyRanks(x)[1],
  features = NULL,
  order_rank_by = c("name", "abund", "revabund"),
  order_sample_by = NULL,
  decreasing = TRUE,
  use_relative = TRUE,
  layout = c("bar", "point"),
  one_facet = TRUE,
  ncol = 2,
  scales = "fixed",
  assay.type = assay_name,
  assay_name = "counts",
  ...
)
}
\arguments{
\item{x}{a
\code{\link[SummarizedExperiment:SummarizedExperiment-class]{SummarizedExperiment}}
object.}

\item{...}{additional parameters for plotting. See
\code{\link{mia-plot-args}} for more details i.e. call \code{help("mia-plot-args")}}

\item{rank}{a single \code{character} value defining the taxonomic rank to
use. Must be a value of \code{taxonomyRanks(x)}.}

\item{features}{a single \code{character} value defining a column from
\code{colData} to be plotted below the abundance plot.
Continuous numeric values will be plotted as point, whereas factors and
character will be plotted as colour-code bar. (default: \code{features =
  NULL})}

\item{order_rank_by}{How to order abundance value: By name (\dQuote{name})
for sorting the taxonomic labels alphabetically, by abundance (\dQuote{abund}) to
sort by abundance values or by a reverse order of abundance values (\dQuote{revabund}).}

\item{order_sample_by}{A single character value from the chosen rank of abundance
data or from \code{colData} to select values to order the abundance
plot by. (default: \code{order_sample_by = NULL})}

\item{decreasing}{TRUE or FALSE: If the \code{order_sample_by} is defined and the
values are numeric, should the values used to order in decreasing or
increasing fashion? (default: \code{decreasing = FALSE})}

\item{use_relative}{\code{TRUE} or \code{FALSE}: Should the relative values
be calculated? (default: \code{use_relative = TRUE})}

\item{layout}{Either \dQuote{bar} or \dQuote{point}.}

\item{one_facet}{Should the plot be returned in on facet or split into
different facet, one facet per different value detect in \code{rank}. If
\code{features} or \code{order_sample_by} is not \code{NULL}, this setting will
be disregarded.}

\item{ncol, scales}{if \code{one_facet = FALSE}, \code{ncol} defines many
columns should be for plotting the different facets and \code{scales} is
used to define the behavior of the scales of each facet. Both values are
passed onto \code{\link[ggplot2:facet_wrap]{facet_wrap}}.}

\item{assay.type}{a \code{character} value defining which assay data to
use. (default: \code{assay.type = "relabundance"})}

\item{assay_name}{a single \code{character} value for specifying which
assay to use for calculation.
(Please use \code{assay.type} instead. At some point \code{assay_name}
will be disabled.)}
}
\value{
a \code{\link[ggplot2:ggplot]{ggplot}} object or list of two
\code{\link[ggplot2:ggplot]{ggplot}} objects, if \code{features} are added to
the plot.
}
\description{
\code{plotAbundance} plots the abundance on a selected taxonomic rank.
Since this probably makes sense only for relative abundance data, the
assay used by default is expected to be in the slot \sQuote{relabundance}.
If only \sQuote{counts} is present, the relative abundance is computed.
}
\details{
Subsetting to rows of interested and ordering of those is expected to be done
outside of this functions, e.g. \code{x[1:2,]}. This will plot data of all
features present.
}
\examples{
data(GlobalPatterns, package="mia")
se <- GlobalPatterns

## Plotting counts using the first taxonomic rank as default
plotAbundance(se, assay.type="counts", use_relative=FALSE) + labs(y="Counts")

## Using "Phylum" as rank
plotAbundance(se, assay.type="counts", rank = "Phylum", add_legend = FALSE)

## If rank is set to NULL plotAbundance behaves like plotExpression
plotAbundance(se, assay.type="counts", rank = NULL,
           features = head(rownames(se)))
  
## A feature from colData or taxon from chosen rank can be used for ordering samples.
plotAbundance(se, assay.type="counts", rank = "Phylum",
           order_sample_by = "Bacteroidetes")

## Features from colData can be plotted together with abundance plot.
# Returned object is a list that includes two plot; other visualizes abundance
# other features. 
plot <- plotAbundance(se, assay.type = "counts", rank = "Phylum",
                   features = "SampleType")
\donttest{
# These two plots can be combined with wrap_plots function from patchwork package
library(patchwork)
wrap_plots(plot, ncol = 1)
}

## Same plot as above but showing sample IDs as labels for the x axis on the top plot

plot[[1]] <- plotAbundance(se, assay.type = "counts", rank = "Phylum",
                           features = "SampleType", add_legend = FALSE,
                           add_x_text = TRUE)[[1]] +
                           theme(axis.text.x = element_text(angle = 90)) 
\donttest{
wrap_plots(plot, ncol = 1, heights = c(0.8,0.2))
}

## Compositional barplot with top 5 taxa and samples sorted by "Bacteroidetes"

# Getting top taxa on a Phylum level
se <- transformAssay(se, method="relabundance")
se_phylum <- agglomerateByRank(se, rank ="Phylum", onRankOnly=TRUE)
top_taxa <- getTop(se_phylum,top = 5, assay.type = "relabundance")

# Renaming the "Phylum" rank to keep only top taxa and the rest to "Other"
phylum_renamed <- lapply(rowData(se)$Phylum,
                       function(x){if (x \%in\% top_taxa) {x} else {"Other"}})
rowData(se)$Phylum <- as.character(phylum_renamed)

# Compositional barplot
plotAbundance(se, assay.type="relabundance", rank = "Phylum",
           order_rank_by="abund", order_sample_by = "Bacteroidetes")
}
