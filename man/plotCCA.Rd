% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotCCA.R
\name{plotCCA}
\alias{plotCCA}
\alias{plotRDA}
\alias{plotCCA,SingleCellExperiment-method}
\alias{plotCCA,matrix-method}
\alias{plotRDA,SingleCellExperiment-method}
\alias{plotRDA,matrix-method}
\title{Plot RDA or CCA object}
\usage{
plotCCA(object, ...)

\S4method{plotCCA}{SingleCellExperiment}(object, dimred, ...)

\S4method{plotCCA}{matrix}(object, ...)

plotRDA(object, ...)

\S4method{plotRDA}{SingleCellExperiment}(
  object,
  dimred,
  add.ellipse = TRUE,
  ellipse.alpha = 0.2,
  ellipse.linewidth = 0.1,
  ellipse.linetype = 1,
  vec.size = 0.5,
  vec.color = vec.colour,
  vec.colour = "black",
  vec.linetype = 1,
  arrow.size = 0.25,
  label.color = label.colour,
  label.colour = "black",
  label.size = 4,
  vec.text = TRUE,
  repel.labels = TRUE,
  sep.group = "â€’",
  repl.underscore = " ",
  add.significance = TRUE,
  add.expl.var = TRUE,
  add.vectors = TRUE,
  parse.labels = TRUE,
  ...
)

\S4method{plotRDA}{matrix}(object, ...)
}
\arguments{
\item{object}{a
\code{\link[TreeSummarizedExperiment:TreeSummarizedExperiment-constructor]{TreeSummarizedExperiment}}
or a matrix of weights. The latter is returned as output from \code{\link[mia:runCCA]{calculateRDA}}.}

\item{...}{additional parameters for plotting, inherited from
\code{\link[scater:plotReducedDim]{plotReducedDim}},
\code{\link[ggplot2:geom_label]{geom_label}} and
\code{\link[ggrepel:geom_label_repel]{geom_label_repel}}.}

\item{dimred}{A string or integer scalar indicating the reduced dimension to
plot. This is the output of \code{\link[mia:runCCA]{runRDA}} and resides in
\code{reducedDim(tse, dimred)}.}

\item{add.ellipse}{One of \code{c(TRUE, FALSE, "fill", "colour", "color")},
indicating whether ellipses should be present, absent, filled or colored.
(default: \code{ellipse.fill = TRUE})}

\item{ellipse.alpha}{Number between 0 and 1 to adjust the opacity of ellipses.
(default: \code{ellipse.alpha = 0.2})}

\item{ellipse.linewidth}{Number specifying the size of ellipses.
(default: \code{ellipse.linewidth = 0.1})}

\item{ellipse.linetype}{Discrete number specifying the style of ellipses.
(default: \code{ellipse.linetype = 1})}

\item{vec.size}{Number specifying the size of vectors.
(default: \code{vec.size = 0.5})}

\item{vec.color}{Alias for \code{vec.colour}.}

\item{vec.colour}{String specifying the colour of vectors.
(default: \code{vec.color = "black"})}

\item{vec.linetype}{Discrete number specifying the style of vector lines.
(default: \code{vec.linetype = 1})}

\item{arrow.size}{Number specifying the size of arrows.
(defaults: \code{arrow.size = 0.25})}

\item{label.color}{Alias for \code{label.colour}.}

\item{label.colour}{String specifying the colour of text and labels.
(default: \code{label.color = "black"})}

\item{label.size}{Number specifying the size of text and labels.
(default: \code{label.size = 4})}

\item{vec.text}{TRUE or FALSE, should text instead of labels be used to label vectors.
(default: \code{vec.text = TRUE})}

\item{repel.labels}{TRUE or FALSE, should labels be repelled.
(default: \code{repel.labels = TRUE})}

\item{sep.group}{String specifying the separator used in the labels.
(default: \code{sep.group = "\U2012"})}

\item{repl.underscore}{String used to replace underscores in the labels.
(default: \code{repl.underscore = " "})}

\item{add.significance}{TRUE or FALSE, should explained variance and p-value
appear in the labels. (default: \code{add.significance = TRUE})}

\item{add.expl.var}{TRUE or FALSE, should explained variance appear on the
coordinate axes. (default: \code{add.expl.var = TRUE})}

\item{add.vectors}{TRUE or FALSE, should vectors appear in the plot.
(default: \code{add.vectors = TRUE})}

\item{parse.labels}{TRUE or FALSE, should labels be parsed.
(default: \code{parse.labels = TRUE})}
}
\value{
A \code{ggplot2} object
}
\description{
\code{plotRDA} and \code{plotCCA} create an RDA/CCA plot starting from the
output of \code{\link[mia:runCCA]{CCA and RDA}} functions, two common methods
for supervised ordination of microbiome data.
}
\details{
\code{plotRDA} and \code{plotCCA} create an RDA/CCA plot starting from the
output of \code{\link[mia:runCCA]{CCA and RDA}} functions, two common methods
for supervised ordination of microbiome data. Either a
\code{\link[TreeSummarizedExperiment:TreeSummarizedExperiment-constructor]{TreeSummarizedExperiment}}
or a matrix object is supported as input. When the input is a
TreeSummarizedExperiment, this should contain the output of runRDA
in the reducedDim slot and the argument \code{dimred} needs to be defined.
When the input is a matrix, this should be returned as output from
calculateRDA. However, the first method is recommended because it provides
the option to adjust aesthetics to the colData variables through the
arguments inherited from \code{\link[scater:plotReducedDim]{plotReducedDim}}.
}
\examples{
# Load dataset
library(miaViz)
data("enterotype", package = "mia")
tse <- enterotype
 
# Run RDA and store results into TreeSE
tse <- runRDA(tse,
              formula = assay ~ ClinicalStatus + Gender + Age,
              FUN = vegan::vegdist,
              distance = "bray",
              na.action = na.exclude)
               
# Create RDA plot coloured by variable
plotRDA(tse, "RDA",
        colour_by = "ClinicalStatus")
 
# Create RDA plot with empty ellipses
plotRDA(tse, "RDA",
        colour_by = "ClinicalStatus",
        add.ellipse = "colour")
 
# Create RDA plot with text encased in labels
plotRDA(tse, "RDA",
        colour_by = "ClinicalStatus",
        vec.text = FALSE)
 
# Create RDA plot without repelling text
plotRDA(tse, "RDA",
        colour_by = "ClinicalStatus",
        repel.labels = FALSE)
 
# Create RDA plot without vectors
plotRDA(tse, "RDA",
        colour_by = "ClinicalStatus",
        add.vectors = FALSE)
 
# Calculate RDA as a separate object
rda_mat <- calculateRDA(tse,
                        formula = assay ~ ClinicalStatus + Gender + Age,
                        FUN = vegan::vegdist,
                        distance = "bray",
                        na.action = na.exclude)
 
# Create RDA plot from RDA matrix
plotRDA(rda_mat)
}
